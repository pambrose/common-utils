[versions]
# Plugin versions
coverallsPlugin = "2.12.2"
kotlinterPlugin = "5.2.0"
versionsPlugin = "0.52.0"

# Library versions
brave = "6.3.0"
coroutines = "1.10.2"
datetime = "0.7.1-0.6.x-compat"
dropwizard = "4.2.34"
exposed = "0.61.0"
grpc = "1.75.0"
guava = "33.0.0-jre"
java = "2.0.0"
jetty = "10.0.26"
kotest = "6.0.1"
kotlin = "2.2.10"
ktor = "3.2.3"
logback = "1.5.18"
logging = "7.0.12"
nettyTcNative = "2.0.72.Final"
prometheus = "0.16.0"
python = "2.7.4"
redis = "6.1.0"
resend = "4.5.0"
serialization = "1.9.0"
zipkin = "3.5.1"
zipkinReporter = "3.5.1"
zipkinSender = "3.5.1"

[libraries]
# Kotlin
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Logging
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "logging" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Resend
resend = { group = "com.resend", name = "resend-java", version.ref = "resend" }

# Guava
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# gRPC
grpc-bom = { module = "io.grpc:grpc-bom", version.ref = "grpc" }
grpc-inprocess = { module = "io.grpc:grpc-inprocess" }
grpc-netty = { module = "io.grpc:grpc-netty" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf" }
grpc-services = { module = "io.grpc:grpc-services" }
grpc-stub = { module = "io.grpc:grpc-stub" }
netty-ssl = { module = "io.netty:netty-tcnative-boringssl-static", version.ref = "nettyTcNative" }

# Dropwizard
dropwizard-bom = { module = "io.dropwizard.metrics:metrics-bom", version.ref = "dropwizard" }
dropwizard-core = { module = "io.dropwizard.metrics:metrics-core" }
dropwizard-healthcheck = { module = "io.dropwizard.metrics:metrics-healthchecks" }
dropwizard-jmx = { module = "io.dropwizard.metrics:metrics-jmx" }
dropwizard-servlets = { module = "io.dropwizard.metrics:metrics-servlets" }

# Exposed
exposed-bom = { module = "org.jetbrains.exposed:exposed-bom", version.ref = "exposed" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc" }
exposed-jodatime = { module = "org.jetbrains.exposed:exposed-jodatime" }

# Scripting
java-scripting = { module = "ch.obermuhlner:java-scriptengine", version.ref = "java" }
python-scripting = { module = "org.python:jython-standalone", version.ref = "python" }
kotlin-scripting = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }

# Jetty
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "jetty" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server", version.ref = "ktor" }
ktor-server-html-builder = { group = "io.ktor", name = "ktor-server-html-builder-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Prometheus
prometheus-bom = { module = "io.prometheus:simpleclient_bom", version.ref = "prometheus" }
prometheus-core = { module = "io.prometheus:simpleclient" }
prometheus-dropwizard = { module = "io.prometheus:simpleclient_dropwizard" }
prometheus-hotspot = { module = "io.prometheus:simpleclient_hotspot" }
prometheus-servlet = { module = "io.prometheus:simpleclient_servlet" }

# Redis
redis = { module = "redis.clients:jedis", version.ref = "redis" }

# Zipkin
brave = { module = "io.zipkin.brave:brave", version.ref = "brave" }
zipkin-core = { module = "io.zipkin.zipkin2:zipkin", version.ref = "zipkin" }
zipkin-reporter = { module = "io.zipkin.reporter2:zipkin-reporter-brave", version.ref = "zipkinReporter" }
zipkin-sender-okhttp = { module = "io.zipkin.reporter2:zipkin-sender-okhttp3", version.ref = "zipkinSender" }

# Testing
kotest = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinterPlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
coveralls = { id = "com.github.kt3k.coveralls", version.ref = "coverallsPlugin" }
